# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.document import Document
from openapi_server import util

from openapi_server.models.document import Document  # noqa: E501

class Documents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents=None):  # noqa: E501
        """Documents - a model defined in OpenAPI

        :param documents: The documents of this Documents.  # noqa: E501
        :type documents: List[Document]
        """
        self.openapi_types = {
            'documents': List[Document]
        }

        self.attribute_map = {
            'documents': 'documents'
        }

        self._documents = documents

    @classmethod
    def from_dict(cls, dikt) -> 'Documents':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The documents of this Documents.  # noqa: E501
        :rtype: Documents
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this Documents.

        array of documents  # noqa: E501

        :return: The documents of this Documents.
        :rtype: List[Document]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this Documents.

        array of documents  # noqa: E501

        :param documents: The documents of this Documents.
        :type documents: List[Document]
        """
        if documents is None:
            raise ValueError("Invalid value for `documents`, must not be `None`")  # noqa: E501

        self._documents = documents

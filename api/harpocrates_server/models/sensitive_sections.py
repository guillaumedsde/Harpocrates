# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from harpocrates_server.models.base_model import Model
from harpocrates_server.models.sensitive_section import SensitiveSection
from harpocrates_server import util

from harpocrates_server.models.sensitive_section import SensitiveSection  # noqa: E501

class SensitiveSections(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sensitive_sections=None):  # noqa: E501
        """SensitiveSections - a model defined in OpenAPI

        :param sensitive_sections: The sensitive_sections of this SensitiveSections.  # noqa: E501
        :type sensitive_sections: List[SensitiveSection]
        """
        self.openapi_types = {
            'sensitive_sections': List[SensitiveSection]
        }

        self.attribute_map = {
            'sensitive_sections': 'sensitiveSections'
        }

        self._sensitive_sections = sensitive_sections

    @classmethod
    def from_dict(cls, dikt) -> 'SensitiveSections':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sensitiveSections of this SensitiveSections.  # noqa: E501
        :rtype: SensitiveSections
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sensitive_sections(self):
        """Gets the sensitive_sections of this SensitiveSections.

        array of sensitive sections  # noqa: E501

        :return: The sensitive_sections of this SensitiveSections.
        :rtype: List[SensitiveSection]
        """
        return self._sensitive_sections

    @sensitive_sections.setter
    def sensitive_sections(self, sensitive_sections):
        """Sets the sensitive_sections of this SensitiveSections.

        array of sensitive sections  # noqa: E501

        :param sensitive_sections: The sensitive_sections of this SensitiveSections.
        :type sensitive_sections: List[SensitiveSection]
        """
        if sensitive_sections is None:
            raise ValueError("Invalid value for `sensitive_sections`, must not be `None`")  # noqa: E501

        self._sensitive_sections = sensitive_sections

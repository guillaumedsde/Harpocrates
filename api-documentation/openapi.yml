openapi: 3.0.0
info:
  description: This is an API for predictive analytics engines
  version: "1"
  title: REST API for predictive analtyics
externalDocs:
  description: "This is how documents etc can be pushed into the classifiers, and annotations received. "
  url: https://visualising-sensitivity-classification-features.gitlab.io/api-specification/
tags:
  - name: set
    description: Everything about documentsets
  - name: document
    description: Everything about documents
paths:
  /documentSet:
    get:
      tags:
        - set
      summary: List all documentsets known by the engine
      operationId: set.get_sets
      responses:
        "200":
          description: Listing of all known document sets
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/documentSet"
    post:
      tags:
        - set
      summary: Add a new documentset set to the engine
      operationId: set.new_set
      x-codegen-request-body-name: set
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/documentSet"
          application/xml:
            schema:
              $ref: "#/components/schemas/documentSet"
        description: documentSet descriptor that needs to be added to the engine
        required: true
      responses:
        "200":
          description: "Successful operation: document set added to the engine"
        "405":
          description: Invalid input
  "/documentSet/{setid}":
    get:
      summary: lists all documents in the set
      operationId: set.get_documents_in_set
      tags:
        - set
      parameters:
        - in: path
          name: setid
          description: ID of the set
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/document"
        "404":
          description: No such set
        "405":
          description: Invalid input
    delete:
      tags:
        - set
      summary: delete the set
      operationId: set.delete_set
      parameters:
        - in: path
          name: setid
          description: ID of the set
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: No such set
        "405":
          description: Invalid input
  "/documentSet/{setid}/summary":
    get:
      summary: lists an implementers current summary of the set, such as classification accuracy
      operationId: set.get_set_summary
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
      tags:
        - set
      responses:
        "200":
          description: Successful operation
        "501":
          description: Not implemented
  "/documentSet/{setid}/search":
    get:
      summary: provides a search for a given specified query on the set
      operationId: set.search_documents_in_set
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: query
          name: q
          description: Search query for filtering documents in the set
          required: true
          schema:
            type: string
        - in: query
          name: format
          description: Format of the response
          required: false
          schema:
            type: string
            default: json
      tags:
        - set
      responses:
        "200":
          description: Successful operation
  "/documentSet/{setid}/complete":
    get:
      summary: indicates to an implementer that all documents in this set have now been uploaded. An implementer may choose to return 409 codes when accessing any documents if this method has not yet been called
      operationId: set.set_complete
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
      tags:
        - set
      responses:
        "200":
          description: Successful operation
  "/documentSet/{setid}/byPriority":
    get:
      summary: lists all documents in the set, ordered by a prediction, such as reviewing time
      operationId: set.get_set_documents_by_priority
      tags:
        - set
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: query
          name: priority
          description: Priority to filter documents
          required: false
          schema:
            type: string
            default: reviewingTime
      responses:
        "200":
          description: Successful operation
        "404":
          description: No such set
        "405":
          description: Invalid input
        "501":
          description: Not implemented
  "/documentSet/{setid}/{docid}":
    put:
      tags:
        - document
      summary: Add a new document to the document set
      description: Contents of the document in the body of the request. This should be in plain text. The Content-Type header should be appropriately set to text/plain.
      operationId: set.new_document
      x-codegen-request-body-name: document
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Successful operation - document received
        "202":
          description: The document has been accepted for processing, but the processing has not been complete'd (see RFC 2616).
        "400":
          description: Invalid input
        "404":
          description: No such documentset
  "/documentSet/{setid}/{docid}/sensitivities":
    get:
      tags:
        - document
      summary: Returns the predicted sensitivities in the document
      operationId: document.get_document_sensitivities
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/sensitivityPrediction"
        "400":
          description: Invalid input
        "404":
          description: No such documentset or document
        "409":
          description: The document is there, but it has not yet been processed. The documentset must be complete'd before use.
  "/documentSet/{setid}/{docid}/{reviewerid}/sensitivities":
    post:
      tags:
        - document
      summary: Records the sensitivities that were found in the document by reviewers
      operationId: document.post_document_sensitivities
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
        - in: path
          name: reviewerid
          description: ID of the reviewer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sensitivityAnnotation"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid input
        "404":
          description: No such documentset or document
        "409":
          description: The document is there, but it has not yet been processed. The documentset must be complete'd before use.
        "501":
          description: Not implemented
  "/documentSet/{setid}/{docid}/contents":
    get:
      tags:
        - document
      summary: Returns this engine's representation of the document
      operationId: document.get_document
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid request
        "404":
          description: No such documentset or document
        "409":
          description: The document is there, but it has not yet been processed. The documentset must be complete'd before use.
        "501":
          description: Not implemented
  "/documentSet/{setid}/{docid}/reviewingTime":
    get:
      tags:
        - document
      summary: Returns a prediction of the reviewing time of the document
      operationId: document.get_document_estimated_review_time
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/reviewingTime"
        "400":
          description: Invalid request
        "404":
          description: No such documentset or document
        "409":
          description: The document is there, but it has not yet been processed. The documentset must be complete'd before use.
        "501":
          description: Not implemented
  "/documentSet/{setid}/{docid}/{reviewerid}/reviewingTime":
    post:
      tags:
        - document
      summary: Inform the engine of the actual reviewing time of the document
      operationId: document.get_document_actual_review_time
      parameters:
        - in: path
          name: setid
          required: true
          description: ID of the set
          schema:
            type: string
        - in: path
          name: docid
          description: ID of the document
          required: true
          schema:
            type: string
        - in: path
          name: reviewerid
          description: ID of the reviewer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/actualReviewingTime"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Invalid input
        "404":
          description: No such documentset or document
        "409":
          description: The document is there, but it has not yet been processed. The documentset must be complete'd before use.
        "501":
          description: Not implemented
servers:
  - url: /v1
components:
  schemas:
    documentSet:
      type: object
      description: schema for a set of Documents "document set"
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the document Set
          example: FCC/1/400
        uid:
          type: string
          description: Unique ID of the document Set
          example: set1
      xml:
        name: documentSet
    actualReviewingTime:
      type: object
      description: A actual reviewing time (as opposed to an estimated reviewing time)
      properties:
        actualTime:
          type: number
          format: float
          example: 10.1
      xml:
        name: actualReviewingTime
    reviewingTime:
      type: object
      description: An estimated reviewing time (as opposed to an actual reviewing time)
      allOf:
        - $ref: "#/components/schemas/reviewingTime"
      required:
        - predictedTime
      properties:
        predictedTime:
          type: number
          # TODO specify unit
          description: Predicted time for review
          format: float
          example: 10.5
      xml:
        name: reviewingTime
    section:
      description: This is the base object for recording or suggesting sensitivities
      title: section
      type: object
      required:
        - name
      properties:
        startOffset:
          type: integer
          format: int32
          example: 4
          description: start offset of an annotation in characters (required for an annotation)
        startWord:
          type: string
          example: was
          description: actual first word of an annotation
        endOffset:
          type: integer
          format: int32
          example: 20
          description: end offset of an annotation in characters (required for an annotation)
        endWord:
          type: string
          example: said
          description: actual last word of an annotation
        fullAnnotation:
          type: string
          example: The minister said
          description: For debugging purposes, the full text of the annotation
        name:
          type: string
          example: S27
          description: what was the exemption that was found (mandatory)
        description:
          type: string
          example: This matches the Royal Family checklist
          description: This is an optional textual description of what the predicted sensitivity is, suitable for presentation to the user
    predictedSection:
      description: This object describes a suggested annotation
      title: predictedSection
      allOf:
        - $ref: "#/components/schemas/section"
        - type: object
          properties:
            confidence:
              type: number
              format: float
              example: 0.75
            confidenceType:
              type: string
              example: probability
    document:
      type: object
      description: A document to review
      required:
        - docid
      properties:
        docid:
          type: string
          description: Unique id for the document
      xml:
        name: document
    sensitivityPrediction:
      type: object
      required:
        - predictedSections
      properties:
        predictedSections:
          type: array
          items:
            $ref: "#/components/schemas/predictedSection"
      xml:
        name: sensitivityPrediction
    sensitivityAnnotation:
      type: object
      required:
        - sections
      properties:
        sections:
          type: array
          items:
            $ref: "#/components/schemas/section"
      xml:
        name: sensitivityAnnotation
    apiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

swagger: "2.0"
info:
  description: "This is an API for predictive analytics engines"
  version: "1"
  title: "REST API for predictive analtyics"
#host: "CICERO.io"
basePath: "/v1"
externalDocs:
  description: "This is how documents etc can be pushed into the classifiers, and annotations received. "
  url: "https://CICERO.io/"
tags:
  - name: "set"
    description: "Everything about documentsets"
  - name: "document"
    description: "Everything about documents"
schemes:
  - "https"
  - "http"
paths:
  /documentset:
    get:
      tags:
        - "set"
      summary: "List all documentsets known by the engine"
      description: ""
      responses:
        200:
          description: "Listing of all known document sets"
          schema:
            type: array
            items:
              $ref: "#/definitions/DocumentSet"

    #perhaps this should be a PUT??
    post:
      tags:
        - "set"
      summary: "Add a new documentset set to the engine"
      description: ""
      operationId: "addSet"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "DocumentSet descriptor that needs to be added to the engine"
          required: true
          schema:
            $ref: "#/definitions/DocumentSet"
      responses:
        200:
          description: "Successful operation: document set added to the engine"
        405:
          description: "Invalid input"

  #      security:
  #      - petstore_auth:
  #        - "write:pets"
  #        - "read:pets"
  /documentset/{setid}:
    get:
      summary: "lists all documents in the set"
      tags:
        - "set"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Document"
        405:
          description: "Invalid input"
        404:
          description: "No such set"
    delete:
      tags:
        - "set"
      summary: "delete the set"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Invalid input"
        404:
          description: "No such set"

  #added on 22/1/2019, based on meeting minutes previous day
  /documentset/{setid}/summary:
    get:
      summary: "lists an implementers current summary of the set, such as classification accuracy"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
      tags:
        - "set"
      responses:
        200:
          description: "Successful operation"
        501:
          description: "Not implemented"

  /documentset/{setid}/search:
    get:
      summary: "provides a search for a given specified query on the set"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "query"
          name: "q"
          required: true
          type: "string"
        - in: "query"
          name: "format"
          required: false
          default: "json"
          type: "string"
      tags:
        - "set"
      responses:
        200:
          description: "Successful operation"

  /documentset/{setid}/complete:
    get:
      summary: "indicates to an implementer that all documents in this set have now been uploaded. An implementer may choose to return 409 codes when accessing any documents if this method has not yet been called"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
      tags:
        - "set"
      responses:
        200:
          description: "Successful operation"

  /documentset/{setid}/byPriority:
    get:
      summary: "lists all documents in the set, ordered by a prediction, such as reviewing time"
      tags:
        - "set"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "query"
          name: "priority"
          required: false
          default: "reviewingTime"
          type: "string"
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Invalid input"
        404:
          description: "No such set"
        501:
          description: "Not implemented"

  /documentset/{setid}/{docid}:
    put:
      tags:
        - "document"
      summary: "Add a new document to the document set"
      description: "Contents of the document in the body of the request. This should be in plain text. The Content-Type header should be appropriately set to text/plain."
      consumes:
        - text/plain
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
        - in: "body"
          name: "documents contents"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Successful operation - document received"
        202:
          description: "The document has been accepted for processing, but the processing has not been complete'd (see RFC 2616)."
        400:
          description: "Invalid input"
        404:
          description: "No such documentset"

  /documentset/{setid}/{docid}/sensitivities:
    get:
      tags:
        - "document"
      summary: "Returns the predicted sensitivities in the document"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SensitivityPrediction"
        400:
          description: "Invalid input"
        404:
          description: "No such documentset or document"
        409:
          description: "The document is there, but it has not yet been processed. The documentset must be complete'd before use."

  /documentset/{setid}/{docid}/{reviewerid}/sensitivities:
    post:
      tags:
        - "document"
      summary: "Records the sensitivities that were found in the document by reviewers"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
        - in: "path"
          name: "reviewerid"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/SensitivityAnnotation"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid input"
        404:
          description: "No such documentset or document"
        409:
          description: "The document is there, but it has not yet been processed. The documentset must be complete'd before use."
        501:
          description: "Not implemented"

  #added 24/1/2019 - get the contents of a document from this system
  /documentset/{setid}/{docid}/contents:
    get:
      tags:
        - "document"
      summary: "Returns this engine's representation of the document"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid request"
        404:
          description: "No such documentset or document"
        409:
          description: "The document is there, but it has not yet been processed. The documentset must be complete'd before use."
        501:
          description: "Not implemented"

  /documentset/{setid}/{docid}/reviewingTime:
    get:
      tags:
        - "document"
      summary: "Returns a prediction of the reviewing time of the document"
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ReviewingTime"
        400:
          description: "Invalid request"
        404:
          description: "No such documentset or document"
        409:
          description: "The document is there, but it has not yet been processed. The documentset must be complete'd before use."
        501:
          description: "Not implemented"

  /documentset/{setid}/{docid}/{reviewerid}/reviewingTime:
    post:
      tags:
        - "document"
      summary: "Inform the engine of the actual reviewing time of the document"
      #description:
      parameters:
        - in: "path"
          name: "setid"
          required: true
          type: "string"
        - in: "path"
          name: "docid"
          required: true
          type: "string"
        - in: "path"
          name: "reviewerid"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/ActualReviewingTime"
      responses:
        200:
          description: OK
        400:
          description: "Invalid input"
        404:
          description: "No such documentset or document"
        409:
          description: "The document is there, but it has not yet been processed. The documentset must be complete'd before use."
        501:
          description: "Not implemented"

# securityDefinitions:
#   petstore_auth:
#     type: "oauth2"
#     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     scopes:
#       write:pets: "modify pets in your account"
#       read:pets: "read your pets"
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"
definitions:
  DocumentSet:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
        example: "FCC/1/400"
      uid:
        type: "string"
        example: "set1"
    xml:
      name: "DocumentSet"

  ActualReviewingTime:
    type: "object"
    properties:
      actualTime:
        type: "number"
        format: "float"
        example: 10.1
    xml:
      name: "ActualReviewingTime"

  ReviewingTime:
    type: "object"
    allOf:
      - $ref: "#/definitions/ActualReviewingTime"
    required:
      - "predictedTime"
    properties:
      predictedTime:
        type: "number"
        format: "float"
        example: 10.5
    xml:
      name: "ReviewingTime"

  Section:
    description: "This is the base object for recording or suggesting sensitivities"
    title: "Section"
    type: "object"
    required:
      - "name"
    properties:
      startOffset:
        type: "number"
        format: "int32"
        example: 4
        description: "start offset of an annotation in characters (required for an annotation)"
      startWord:
        type: "string"
        format: "int32"
        example: "was"
        description: "actual first word of an annotation"
      endOffset:
        type: "number"
        format: "int32"
        example: 20
        description: "end offset of an annotation in characters (required for an annotation)"
      endWord:
        type: "string"
        format: "int32"
        example: "said"
        description: "actual last word of an annotation"
      fullAnnotation:
        type: "string"
        example: "The minister said"
        description: "For debugging purposes, the full text of the annotation"
      name:
        type: "string"
        example: "S27"
        description: "what was the exemption that was found (mandatory)"
      description:
        type: "string"
        example: "This matches the Royal Family checklist"
        description: "This is an optional textual description of what the predicted sensitivity is, suitable for presentation to the user"

  PredictedSection:
    description: "This object describes a suggested annotation"
    title: "PredictedSection"
    allOf:
      - $ref: "#/definitions/Section"
      - type: "object"
        properties:
          confidence:
            type: "number"
            format: "float"
            example: 0.75
          confidenceType:
            type: "string"
            example: "probability"

  Document:
    type: "object"
    required:
      - "docid"
    properties:
      docid:
        type: "string"
    xml:
      name: "Document"

  SensitivityPrediction:
    type: "object"
    required:
      - "predictedSections"
    properties:
      predictedSections:
        type: "array"
        items:
          $ref: "#/definitions/PredictedSection"
    xml:
      name: "SensitivityPrediction"

  SensitivityAnnotation:
    type: "object"
    required:
      - "sections"
    properties:
      sections:
        type: "array"
        items:
          $ref: "#/definitions/Section"
    xml:
      name: "SensitivityAnnotations"

  #not currently used
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"

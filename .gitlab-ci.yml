# This file was obtained from https://gitlab.com/mdhtr/gitlab-pages-swagger-ui/raw/master/.gitlab-ci.yml
# and then modified

stages:
  - test
  - build-documentation
  - build
  - documentation

include:
  - template: Code-Quality.gitlab-ci.yml

# specify the location of the Open API Specification files within your project
# and the filename of the specification that you would like to display by default
variables:
  DOCS_FOLDER: api-specification
  SPEC_TO_DISPLAY: openapi.yml

# Use IBM OpenAPI validator to check for any errors in API specification
validate-api-specification:
  image: node:alpine
  stage: test
  before_script:
    - cd api-specification
    - npm install --dev-only
  script:
    - npm run validate
  tags:
    - trdocker

test_api-client:
  image: node:13.10-alpine3.10
  stage: test
  script:
    - cd js-api-client
    # install dependencies
    - npm install
    - npm install --dev-only
    # build
    - npm run build
    # install code coverage dependencies
    - npm install -g nyc codecov
    # run tests with code coverage
    - nyc --reporter=lcov npm test && codecov
  tags:
    - trdocker

lighthouse-ci:
  image: cypress/browsers:node13.6.0-chrome80-ff72
  stage: test
  variables:
    NODE_ENV: production
  script:
    - cd frontend
    - npm install
    - npm run build
    - npx lhci autorun --upload.target=../temporary-public-storage --collect.settings.chromeFlags="--no-sandbox" || echo "LHCI failed!"
  tags:
    - trdocker

code_quality:
  # disable cache for this job
  cache: {}
  # for some reason code quality only works on gitlab shared runners
  only:
    - merge_requests
    - develop
    - master
  tags:
    - shared
  stage: test

api_client_doc:
  stage: build-documentation
  image:
    name: squidfunk/mkdocs-material:4.6.1
    entrypoint: [""]
  before_script:
    - apk add --no-cache build-base  py3-cffi  pango-dev  gdk-pixbuf  shared-mime-info  build-base  libffi-dev  zlib-dev  jpeg-dev  libjpeg-turbo-dev  openjpeg-dev  tiff-dev  libwebp-dev  tk-dev  tcl-dev  cairo  zlib  jpeg  libjpeg-turbo  openjpeg  tiff  libwebp
    - pip install mkdocs-pdf-export-plugin
  script:
    - cd js-api-client
    - make doc
    - mv site ../api-client
  only:
    - master
  artifacts:
    paths:
      - api-client
  tags:
    - trdocker

# publishes all files from the $DOCS_FOLDER together with the static version of SwaggerUI
# sets the specification file named in $SPEC_TO_DISPLAY to be displayed by default
api_doc:
  stage: build-documentation
  image: node:alpine
  script:
    - cd api-specification
    - npm install --dev-only
    - mkdir api
    - cp -rp node_modules/swagger-ui-dist/* api
    - cp -rp $DOCS_FOLDER/* api
    - sed -i "s#https://petstore\.swagger\.io/v2/swagger\.json#$SPEC_TO_DISPLAY#g" api/index.html
    - mv api ../api-doc
  artifacts:
    paths:
      - api-doc
  only:
    - master
  tags:
    - trdocker

# template service build job
.build_service:
  stage: build
  image: docker:stable
  # disable cache for this job
  cache: {}
  before_script:
    - apk add make
    - apk add git
    - make docker-login
  script:
    - make build
    - make tag
    - make deploy
  tags:
    - trdocker

api:
  extends: .build_service
  # name of service to build is the name of the job
  variables:
    SERVICE: $CI_JOB_NAME
  # only build on changes to api
  only:
    changes:
      - api/**/*
      - .gitlab-ci/yml
      - Makefile

frontend:
  extends: .build_service
  # name of service to build is the name of the job
  variables:
    SERVICE: $CI_JOB_NAME
  # only build on changes to frontend
  only:
    changes:
      - frontend/**/*
      - .gitlab-ci/yml
      - Makefile
  script:
    - make build
    - make tag
    - make deploy
    - VERSION=test-mode-1 BUILD_ARGS="--build-arg TEST_MODE=1" make build
    - VERSION=test-mode-1 make tag
    - VERSION=test-mode-1 make deploy
    - VERSION=test-mode-2 BUILD_ARGS="--build-arg TEST_MODE=2" make build
    - VERSION=test-mode-2 make tag
    - VERSION=test-mode-2 make deploy

# publishes all files from the $DOCS_FOLDER together with the static version of SwaggerUI
# sets the specification file named in $SPEC_TO_DISPLAY to be displayed by default
pages:
  image: alpine
  stage: documentation
  script:
    - mkdir public
    - mv ./docs/index.html public
    # copy codeclimate report, allow failure
    # - cp codeclimate.html public
    - cp -r docs public
    - cp README.md public
    - cp -r api-client public/
    - mv api-doc public/api
  artifacts:
    paths:
      - public
  only:
    - master
  tags:
    - trdocker
